"""add transcription_segments table

Revision ID: 70925cd08f55
Revises: 744d231300b3
Create Date: 2025-10-06 11:54:50.407489

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '70925cd08f55'
down_revision: Union[str, Sequence[str], None] = '744d231300b3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transcription_segments',
    sa.Column('id', sa.Integer(), nullable=False, comment='Segment primary key'),
    sa.Column('video_id', sa.String(length=20), nullable=False, comment='YouTube video ID (FK to videos)'),
    sa.Column('source', sa.String(length=20), nullable=False, comment='Transcript source: whisper, youtube, etc.'),
    sa.Column('segment_index', sa.Integer(), nullable=False, comment='Index/order of the segment within the transcript'),
    sa.Column('start', sa.Float(), nullable=False, comment='Segment start time in seconds'),
    sa.Column('duration', sa.Float(), nullable=False, comment='Segment duration in seconds'),
    sa.Column('end', sa.Float(), nullable=False, comment='Segment end time in seconds (start + duration)'),
    sa.Column('text', sa.Text(), nullable=False, comment='Transcript text for the segment'),
    sa.Column('raw', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Raw segment JSON from the transcription service'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['video_id'], ['videos.video_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transcription_segments_video_id'), 'transcription_segments', ['video_id'], unique=False)
    op.create_index('ix_transcription_segments_video_start', 'transcription_segments', ['video_id', 'start'], unique=False)
    op.drop_index(op.f('ix_transcripts_source'), table_name='transcripts')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_transcripts_source'), 'transcripts', ['source'], unique=False)
    op.drop_index('ix_transcription_segments_video_start', table_name='transcription_segments')
    op.drop_index(op.f('ix_transcription_segments_video_id'), table_name='transcription_segments')
    op.drop_table('transcription_segments')
    # ### end Alembic commands ###
